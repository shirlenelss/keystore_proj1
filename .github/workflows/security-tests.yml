name: Keystore Security Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  security-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov bandit safety
    
    - name: Run unit tests with coverage
      run: |
        python -m pytest tests/ -v --cov=src/keystore_manager --cov-report=xml
    
    - name: Security scan with Bandit
      run: |
        bandit -r src/ -f json -o bandit-report.json || true
    
    - name: Check dependencies for security vulnerabilities
      run: |
        safety check --json --output safety-report.json || true
    
    - name: Run keystore functionality test
      run: |
        python keystore_cli.py security generate-password --length 16
        python keystore_cli.py keystore generate-key --key-name ci_test
        python keystore_cli.py keystore list-keys
        python keystore_cli.py certificate create-self-signed --common-name ci.test.com
        python keystore_cli.py security scan-secrets . --output ci-secrets-report.json
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports-${{ matrix.python-version }}
        path: |
          bandit-report.json
          safety-report.json
          ci-secrets-report.json
    
    - name: Clean up test artifacts
      run: |
        rm -rf keystore/ certificates/ *.log *.json
      if: always()